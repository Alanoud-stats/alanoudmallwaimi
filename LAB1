git init LAB1
cd LAB1
touch lab1.py

import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

sns.set_theme(style="whitegrid")

# Example 1: Finite difference approximation vs. exact derivative
h = 0.1
x = np.arange(0, 2 * np.pi, h)
y = np.cos(x)
forward_diff = np.diff(y) / h
x_diff = x[:-1]
exact_solution = -np.sin(x_diff)

plt.figure(figsize=(12, 8))
plt.plot(x_diff, forward_diff, '--', label='Finite difference approximation')
plt.plot(x_diff, exact_solution, label='Exact solution')
plt.legend()
plt.show()

max_error = max(abs(exact_solution - forward_diff))
print("Max error:", max_error)

# Example 2: Table of finite differences for different h values
x0 = 0.7
h = 2.**-np.arange(1, 30)
df = (np.cos(x0 + h) - np.cos(x0)) / h
true_value = -np.sin(x0)

print("\nk | Approximation        | Ratio of errors     | Relative differences")
print("---|-----------------------|----------------------|------------------------")

previous_approximation = None
previous_error = None

for k in range(1, len(h) + 1):
    approximation = df[k - 1]
    error = np.abs(approximation - true_value)
    ratio = np.abs(previous_error / error) if previous_error is not None else " "
    relative_difference = np.abs((approximation - previous_approximation) / previous_approximation) if previous_approximation is not None else " "

    formatted_approximation = f"{approximation:.15f}"
    formatted_ratio = f"{ratio:.6f}" if isinstance(ratio, float) else ratio
    formatted_relative_difference = f"{relative_difference:.10f}" if isinstance(relative_difference, float) else relative_difference

    print(f"{k:<3}| {formatted_approximation:<23}| {formatted_ratio:<22}| {formatted_relative_difference:<24}")

    previous_error = error
    previous_approximation = approximation

print(f"\nTrue value of the derivative: {true_value:.17f}")

git add lab1.py
git commit -m "Add LAB1 with numerical differentiation examples"

git remote add origin https://github.com/YOUR_USERNAME/LAB1.git
git branch -M main
git push -u origin main
